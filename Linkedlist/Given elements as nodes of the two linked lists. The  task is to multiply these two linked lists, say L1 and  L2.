#include <iostream>
#include<math.h>
using namespace std;
struct node {
  int data;
  struct node *next;
};

void createList(struct node **head, int data) {
  struct node *newNode = (struct node *)malloc(sizeof(struct node));
  newNode->data = data;
  newNode->next = NULL;

  if (*head == NULL) {
    *head = newNode;
  } else {
    struct node *temp = *head;
    while (temp->next != NULL) {
      temp = temp->next;
    }
    temp->next = newNode;
  }
}
void displayList(struct node *head) {
  struct node *temp = head;
  while (temp != NULL) {
    printf("%d ", temp->data);
    temp = temp->next;
  }
  printf("\n");
}
struct node* merge(struct node*head1, struct node* head2)
{
struct node* ptr1 = head1;
  struct node* ptr2 = head2;
  struct node* temp1, * temp2;

  while (ptr1 && ptr2) {
    temp1 = ptr1->next;
    temp2 = ptr2->next;

    ptr1->next = ptr2;
    ptr2->next = temp1;

    ptr1 = temp1;
    ptr2 = temp2;
  }

  return head1;
}
int multiplyLinkedLists(struct node *head1, struct node *head2) {
  int num1 = 0, num2 = 0;

  while (head1 != NULL) {
    num1 = num1 * 10 + head1->data;
    head1 = head1->next;
  }

  while (head2 != NULL) {
    num2 = num2 * 10 + head2->data;
    head2 = head2->next;
  }

  return num1 * num2;
}

int main() {
  struct node *head1 = NULL;
  struct node *head2 = NULL;

  createList(&head1, 3);
  createList(&head1, 2);
  createList(&head1, 1);
  createList(&head2, 1);
  createList(&head2, 2);

  int n1, n2;
  int mul=multiplyLinkedLists(head1,head2);
  cout<<mul;
}
