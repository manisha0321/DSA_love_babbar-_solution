vector<int> nextGreaterElement(vector<int>& arr, int n)
{
	// Write your code here
	vector<int> ans(n,-1);
    for(int i=0; i<n; i++){
        for(int j = i+1; j<n; j++){
            if(arr[i]<arr[j]){           
                ans[i]=arr[j];
                break;
            }
        }
    }
	return ans;
}
// earlier was o(n^2) time complexity
//this one is more optimised
#include <stack>
vector<int> nextGreaterElement(vector<int>& arr, int n)
{
	// Write your code here
    vector<int> ans(n, -1);
    std::stack<int> st;

    for (int i = 0; i < n; i++) {
        while (!st.empty() && arr[i] > arr[st.top()]) {
            ans[st.top()] = arr[i];
            st.pop();
        }
        st.push(i);
    }

    return ans;
}
